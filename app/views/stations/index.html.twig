{% extends "base.html.twig" %} 

{% block content %}
<section>
    <article>
        <div id="map"></div>
    </article>
</section>
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    <script>

        initializeMapAndLocator();

        function initializeMapAndLocator(){

            //var nearestStations = {{ nearestStations|json_encode()|raw }};

            L.control.locate({
   
                strings: {
                    title: "Show me Where I am, yo!",
                }
            
            }).addTo(map);

            map.on('locationfound', onLocationFound);

        }

                    
        function onLocationFound(myPosition) {
            
            $.ajax({
                
                //myPosition.latitude
                //myPosition.longitude
                //nearStation/46.674223/5.551638
                
                //au retour de l'appel
                // boucler sur les résultats du json
                // ajouter les markers

                url: `${window.location.href}nearStation`,
                type : 'POST', 
                dataType: 'JSON',
                data: { lat: myPosition.latitude, lon: myPosition.longitude },
                success : function(datas, statut){
      
                    //console.log(datas);

                    $.each(datas, function(key4, data) {
                        var name = data.name_station;
                        var address = data.address;
                        var city = data.city;
                        var zip = data.zip;
                        var all = [data.latitude, data.longitude];
                        var popups = "";
                        popups += '<em><b>' +name + 
                            '</b><br>' + address +' '+ zip + ' ' + city +'</em>';

                        L.marker(all).addTo(map).bindPopup(popups); // Ajouter les marqueur sur la carte

                    });



                    /*var radius = myPosition.accuracy /2;

                    var all = [myPosition.latitude, myPosition.longitude];

                    var latlng = L.latLng(all);

                    L.marker(myPosition.latlng).addTo(map)
                    L.circle(myPosition.latlng, radius).addTo(map);*/

                },

                error : function(data ,statut, erreur){
                    
                    console.log(erreur)

                },

            });
            
        }
    
        
        var allStations = {{ allStations|json_encode()|raw }}; // recupérer les données sur le controller
        //console.log(allStations);
       
        
        $.each(allStations, function(key3, allStations) {   // stcker les données dans des variable
            var name = allStations.name_station;
            var address = allStations.address;
            var city = allStations.city;
            var zip = allStations.zip;
            var all = [allStations.latitude, allStations.longitude];
            var popups = "";

            popups += '<em><b>' +name + 
                '</b><br>' + address +' '+ zip + ' ' + city +'</em>';

            L.marker(all).addTo(map).bindPopup(popups); // Ajouter les marqueur sur la carte
        });



        var search = {{ stations|json_encode()|raw }};
        var bounds = [];

        $.each(search, function(key, element) {
            var name = element.name_station;
            var address = element.address;
            var city = element.city;
            var zip = element.zip;
            var pos = [element.latitude, element.longitude];
            var textPopup = "";

            bounds[key] = pos;

            $.each(element.technicals, function(key2, technical) {
                var compagny = technical.company;
                var charge = technical.charge_type;
                var pdc = technical.nbr_pdc;
                var connector = technical.connectors_type;

                textPopup += '<em><b>' +name +
                    '</b><br>' + address +' '+ zip + ' ' + city +
                    '<br>' + compagny + 
                    '<br><b> Type de charge:</b> ' + charge + 
                    '<br><b> Nombre PDC :</b> ' + pdc + 
                    '<br><b> Type connecteur:</b> '+ connector +'</em>'
   

                L.marker(pos).addTo(map).bindPopup(textPopup)
            });

            map.fitBounds(bounds); // zoom vers les marqueurs
               
        });
        

        
    </script>
{% endblock %}